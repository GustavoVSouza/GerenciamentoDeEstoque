-- Criação do banco de dados
CREATE DATABASE gerenciador_estoque;

-- Conectando ao banco de dados criado
\c gerenciador_estoque;

-- Criação das tabelas

-- Tabela de usuários
CREATE TABLE usuarios (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de clientes
CREATE TABLE clientes (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    sobrenome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    telefone VARCHAR(15),
    cpf VARCHAR(11) UNIQUE NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de produtos
CREATE TABLE produtos (
    id SERIAL PRIMARY KEY,
    usuario_id INT REFERENCES usuarios(id) ON DELETE CASCADE,
    nome VARCHAR(100) NOT NULL,
    categoria VARCHAR(50),
    preco_compra DECIMAL(10, 2) NOT NULL,
    preco_venda DECIMAL(10, 2) NOT NULL,
    codigo_rastreio VARCHAR(100),
    status VARCHAR(30) CHECK (status IN ('Disponível', 'Aguardando pagamento', 'Aguardando envio', 'Produto enviado', 'Produto entregue')),
    espaco_ocupado INT NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de pedidos
CREATE TABLE pedidos (
    id SERIAL PRIMARY KEY,
    cliente_id INT REFERENCES clientes(id) ON DELETE CASCADE,
    produto_id INT REFERENCES produtos(id) ON DELETE CASCADE,
    quantidade INT NOT NULL,
    preco_total DECIMAL(10, 2) NOT NULL,
    data_pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_entrega TIMESTAMP,
    status_pagamento VARCHAR(30) CHECK (status_pagamento IN ('Pendente', 'Pago')),
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabela de estoque
CREATE TABLE estoque (
    id SERIAL PRIMARY KEY,
    usuario_id INT REFERENCES usuarios(id) ON DELETE CASCADE,
    total_espacos INT NOT NULL,
    espacos_ocupados INT NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



-- INSERSÕES

-- Inserindo dados na tabela de usuários
INSERT INTO usuarios (nome, email, senha) VALUES 
('admin', 'admin@admin.com', 'admin123'),

-- Inserindo dados na tabela de clientes
INSERT INTO clientes (nome, sobrenome, email, telefone, cpf) VALUES 
('Carlos Santos', 'Oliveira', 'carlos.oliveira@example.com', '11987654321', '12345678901'),
('Fernanda Lima', 'Ferreira', 'fernanda.ferreira@example.com', '11912345678', '23456789012'),
('Ricardo Gomes', 'Almeida', 'ricardo.almeida@example.com', '11911223344', '34567890123');

-- Inserindo dados na tabela de produtos
INSERT INTO produtos (usuario_id, nome, categoria, preco_compra, preco_venda, codigo_rastreio, status, espaco_ocupado) VALUES 
(1, 'Produto A', 'Categoria 1', 10.00, 15.00, 'R123456', 'Disponível', 1),
(1, 'Produto B', 'Categoria 2', 20.00, 30.00, 'R234567', 'Aguardando pagamento', 2),
(1, 'Produto C', 'Categoria 1', 5.00, 8.00, 'R345678', 'Produto enviado', 1),
(1, 'Produto D', 'Categoria 3', 15.00, 25.00, 'R456789', 'Disponível', 3),
(1, 'Produto E', 'Categoria 2', 25.00, 40.00, 'R567890', 'Produto entregue', 1);

-- Inserindo dados na tabela de pedidos
INSERT INTO pedidos (cliente_id, produto_id, quantidade, preco_total, data_entrega, status_pagamento) VALUES 
(1, 1, 2, 30.00, '2024-11-10', 'Pendente'),
(2, 2, 1, 30.00, '2024-11-12', 'Pago'),
(3, 3, 3, 24.00, '2024-11-15', 'Pendente'),
(1, 4, 1, 25.00, '2024-11-20', 'Pago'),
(2, 5, 1, 40.00, '2024-11-25', 'Pendente');

-- Inserindo dados na tabela de estoque
INSERT INTO estoque (usuario_id, total_espacos, espacos_ocupados) VALUES 
(1, 100, 10),
(1, 200, 30),
(1, 150, 20);